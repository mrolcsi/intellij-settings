<application>
  <component name="LineMarkerSettings">
    <option name="providers">
      <map>
        <entry key="ComposeLineMarkerProviderDescriptor" value="true" />
        <entry key="PbCodeImplementationLineMarkerProvider" value="true" />
        <entry key="RenderedDoc" value="true" />
        <entry key="RunSqliteStatement" value="true" />
        <entry key="com.android.tools.compose.ComposeColorLineMarkerProviderDescriptor" value="true" />
        <entry key="com.android.tools.idea.compose.annotator.PreviewPickerLineMarkerProvider" value="true" />
        <entry key="com.android.tools.idea.dagger.DaggerRelatedItemLineMarkerProvider" value="true" />
        <entry key="com.android.tools.idea.insights.inspection.AppInsightsExternalAnnotator$LineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.ExternalAnnotationLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.InferredContractAnnotationsLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.InferredNullabilityAnnotationsLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.daemon.impl.IconLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.daemon.impl.RecursiveCallLineMarkerProvider" value="true" />
        <entry key="com.intellij.execution.lineMarker.RunLineMarkerProvider" value="true" />
        <entry key="com.intellij.openapi.vcs.changes.ignore.codeInsight.IgnoreDirectoryMarkerProvider" value="true" />
        <entry key="com.intellij.protobuf.jvm.gutter.PbJavaLineMarkerProvider" value="true" />
        <entry key="com.intellij.ui.ColorLineMarkerProvider" value="true" />
        <entry key="devkit.beforeAfter" value="true" />
        <entry key="devkit.description" value="true" />
        <entry key="java.implemented" value="true" />
        <entry key="java.implementing" value="true" />
        <entry key="java.lambda" value="true" />
        <entry key="java.overridden" value="true" />
        <entry key="java.overriding" value="true" />
        <entry key="java.service" value="true" />
        <entry key="java.sibling.inherited" value="true" />
        <entry key="kotlin.actual" value="true" />
        <entry key="kotlin.dsl" value="true" />
        <entry key="kotlin.expect" value="true" />
        <entry key="kotlin.implemented" value="true" />
        <entry key="kotlin.implementing" value="true" />
        <entry key="kotlin.overridden" value="true" />
        <entry key="kotlin.overriding" value="true" />
        <entry key="kotlin.recursive" value="true" />
        <entry key="org.editorconfig.configmanagement.editor.EditorConfigPreviewMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.extensions.common.plantuml.PlantUMLCodeFenceDownloadLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.images.editor.ConfigureHtmlImageLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.images.editor.ConfigureMarkdownImageLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.images.editor.ConfigureTextHtmlImageLineMarkerProvider" value="true" />
        <entry key="org.jetbrains.android.AndroidResourceExternalAnnotatorBase$LineMarkerProvider" value="true" />
        <entry key="org.jetbrains.idea.devkit.navigation.PluginDescriptorDeclarationRelatedItemLineMarkerProvider" value="true" />
        <entry key="org.jetbrains.idea.devkit.references.DevKitRelatedPropertiesProvider" value="true" />
        <entry key="org.jetbrains.idea.devkit.testAssistant.TestDataLineMarkerProvider" value="true" />
        <entry key="org.jetbrains.kotlin.idea.highlighter.KotlinRecursiveCallLineMarkerProvider" value="true" />
        <entry key="org.jetbrains.kotlin.idea.highlighter.KotlinSuspendCallLineMarkerProvider" value="true" />
      </map>
    </option>
  </component>
</application>